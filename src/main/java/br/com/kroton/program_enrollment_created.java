/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.kroton;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class program_enrollment_created extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2822271645641173820L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"program_enrollment_created\",\"namespace\":\"br.com.kroton\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"admissionDate\",\"type\":[\"null\",{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}],\"default\":null},{\"name\":\"applicationSubmittedDate\",\"type\":[\"null\",{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}],\"default\":null},{\"name\":\"classStanding\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"creditsAttempted\",\"type\":[\"null\",\"float\"],\"default\":null},{\"name\":\"creditsEarned\",\"type\":[\"null\",\"float\"],\"default\":null},{\"name\":\"eligibleToEnroll\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"startDate\",\"type\":[\"null\",{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}],\"default\":null},{\"name\":\"endDate\",\"type\":[\"null\",{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"gradePointAverage\",\"type\":[\"null\",\"float\"],\"default\":null},{\"name\":\"program\",\"type\":\"string\"},{\"name\":\"affiliation\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"contact\",\"type\":\"string\"},{\"name\":\"programPlan\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"createdAt\",\"type\":[{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}]},{\"name\":\"userCreated\",\"type\":\"string\"}],\"connect.name\":\"br.com.kroton.program_enrollment_created\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<program_enrollment_created> ENCODER =
      new BinaryMessageEncoder<program_enrollment_created>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<program_enrollment_created> DECODER =
      new BinaryMessageDecoder<program_enrollment_created>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<program_enrollment_created> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<program_enrollment_created> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<program_enrollment_created> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<program_enrollment_created>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this program_enrollment_created to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a program_enrollment_created from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a program_enrollment_created instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static program_enrollment_created fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence id;
   private java.time.Instant admissionDate;
   private java.time.Instant applicationSubmittedDate;
   private java.lang.CharSequence classStanding;
   private java.lang.Float creditsAttempted;
   private java.lang.Float creditsEarned;
   private java.lang.Boolean eligibleToEnroll;
   private java.time.Instant startDate;
   private java.time.Instant endDate;
   private java.lang.CharSequence status;
   private java.lang.Float gradePointAverage;
   private java.lang.CharSequence program;
   private java.lang.CharSequence affiliation;
   private java.lang.CharSequence contact;
   private java.lang.CharSequence programPlan;
   private java.lang.Object createdAt;
   private java.lang.CharSequence userCreated;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public program_enrollment_created() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param admissionDate The new value for admissionDate
   * @param applicationSubmittedDate The new value for applicationSubmittedDate
   * @param classStanding The new value for classStanding
   * @param creditsAttempted The new value for creditsAttempted
   * @param creditsEarned The new value for creditsEarned
   * @param eligibleToEnroll The new value for eligibleToEnroll
   * @param startDate The new value for startDate
   * @param endDate The new value for endDate
   * @param status The new value for status
   * @param gradePointAverage The new value for gradePointAverage
   * @param program The new value for program
   * @param affiliation The new value for affiliation
   * @param contact The new value for contact
   * @param programPlan The new value for programPlan
   * @param createdAt The new value for createdAt
   * @param userCreated The new value for userCreated
   */
  public program_enrollment_created(java.lang.CharSequence id, java.time.Instant admissionDate, java.time.Instant applicationSubmittedDate, java.lang.CharSequence classStanding, java.lang.Float creditsAttempted, java.lang.Float creditsEarned, java.lang.Boolean eligibleToEnroll, java.time.Instant startDate, java.time.Instant endDate, java.lang.CharSequence status, java.lang.Float gradePointAverage, java.lang.CharSequence program, java.lang.CharSequence affiliation, java.lang.CharSequence contact, java.lang.CharSequence programPlan, java.lang.Object createdAt, java.lang.CharSequence userCreated) {
    this.id = id;
    this.admissionDate = admissionDate;
    this.applicationSubmittedDate = applicationSubmittedDate;
    this.classStanding = classStanding;
    this.creditsAttempted = creditsAttempted;
    this.creditsEarned = creditsEarned;
    this.eligibleToEnroll = eligibleToEnroll;
    this.startDate = startDate;
    this.endDate = endDate;
    this.status = status;
    this.gradePointAverage = gradePointAverage;
    this.program = program;
    this.affiliation = affiliation;
    this.contact = contact;
    this.programPlan = programPlan;
    this.createdAt = createdAt;
    this.userCreated = userCreated;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return admissionDate;
    case 2: return applicationSubmittedDate;
    case 3: return classStanding;
    case 4: return creditsAttempted;
    case 5: return creditsEarned;
    case 6: return eligibleToEnroll;
    case 7: return startDate;
    case 8: return endDate;
    case 9: return status;
    case 10: return gradePointAverage;
    case 11: return program;
    case 12: return affiliation;
    case 13: return contact;
    case 14: return programPlan;
    case 15: return createdAt;
    case 16: return userCreated;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: admissionDate = (java.time.Instant)value$; break;
    case 2: applicationSubmittedDate = (java.time.Instant)value$; break;
    case 3: classStanding = (java.lang.CharSequence)value$; break;
    case 4: creditsAttempted = (java.lang.Float)value$; break;
    case 5: creditsEarned = (java.lang.Float)value$; break;
    case 6: eligibleToEnroll = (java.lang.Boolean)value$; break;
    case 7: startDate = (java.time.Instant)value$; break;
    case 8: endDate = (java.time.Instant)value$; break;
    case 9: status = (java.lang.CharSequence)value$; break;
    case 10: gradePointAverage = (java.lang.Float)value$; break;
    case 11: program = (java.lang.CharSequence)value$; break;
    case 12: affiliation = (java.lang.CharSequence)value$; break;
    case 13: contact = (java.lang.CharSequence)value$; break;
    case 14: programPlan = (java.lang.CharSequence)value$; break;
    case 15: createdAt = value$; break;
    case 16: userCreated = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'admissionDate' field.
   * @return The value of the 'admissionDate' field.
   */
  public java.time.Instant getAdmissionDate() {
    return admissionDate;
  }


  /**
   * Sets the value of the 'admissionDate' field.
   * @param value the value to set.
   */
  public void setAdmissionDate(java.time.Instant value) {
    this.admissionDate = value;
  }

  /**
   * Gets the value of the 'applicationSubmittedDate' field.
   * @return The value of the 'applicationSubmittedDate' field.
   */
  public java.time.Instant getApplicationSubmittedDate() {
    return applicationSubmittedDate;
  }


  /**
   * Sets the value of the 'applicationSubmittedDate' field.
   * @param value the value to set.
   */
  public void setApplicationSubmittedDate(java.time.Instant value) {
    this.applicationSubmittedDate = value;
  }

  /**
   * Gets the value of the 'classStanding' field.
   * @return The value of the 'classStanding' field.
   */
  public java.lang.CharSequence getClassStanding() {
    return classStanding;
  }


  /**
   * Sets the value of the 'classStanding' field.
   * @param value the value to set.
   */
  public void setClassStanding(java.lang.CharSequence value) {
    this.classStanding = value;
  }

  /**
   * Gets the value of the 'creditsAttempted' field.
   * @return The value of the 'creditsAttempted' field.
   */
  public java.lang.Float getCreditsAttempted() {
    return creditsAttempted;
  }


  /**
   * Sets the value of the 'creditsAttempted' field.
   * @param value the value to set.
   */
  public void setCreditsAttempted(java.lang.Float value) {
    this.creditsAttempted = value;
  }

  /**
   * Gets the value of the 'creditsEarned' field.
   * @return The value of the 'creditsEarned' field.
   */
  public java.lang.Float getCreditsEarned() {
    return creditsEarned;
  }


  /**
   * Sets the value of the 'creditsEarned' field.
   * @param value the value to set.
   */
  public void setCreditsEarned(java.lang.Float value) {
    this.creditsEarned = value;
  }

  /**
   * Gets the value of the 'eligibleToEnroll' field.
   * @return The value of the 'eligibleToEnroll' field.
   */
  public java.lang.Boolean getEligibleToEnroll() {
    return eligibleToEnroll;
  }


  /**
   * Sets the value of the 'eligibleToEnroll' field.
   * @param value the value to set.
   */
  public void setEligibleToEnroll(java.lang.Boolean value) {
    this.eligibleToEnroll = value;
  }

  /**
   * Gets the value of the 'startDate' field.
   * @return The value of the 'startDate' field.
   */
  public java.time.Instant getStartDate() {
    return startDate;
  }


  /**
   * Sets the value of the 'startDate' field.
   * @param value the value to set.
   */
  public void setStartDate(java.time.Instant value) {
    this.startDate = value;
  }

  /**
   * Gets the value of the 'endDate' field.
   * @return The value of the 'endDate' field.
   */
  public java.time.Instant getEndDate() {
    return endDate;
  }


  /**
   * Sets the value of the 'endDate' field.
   * @param value the value to set.
   */
  public void setEndDate(java.time.Instant value) {
    this.endDate = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.CharSequence getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.CharSequence value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'gradePointAverage' field.
   * @return The value of the 'gradePointAverage' field.
   */
  public java.lang.Float getGradePointAverage() {
    return gradePointAverage;
  }


  /**
   * Sets the value of the 'gradePointAverage' field.
   * @param value the value to set.
   */
  public void setGradePointAverage(java.lang.Float value) {
    this.gradePointAverage = value;
  }

  /**
   * Gets the value of the 'program' field.
   * @return The value of the 'program' field.
   */
  public java.lang.CharSequence getProgram() {
    return program;
  }


  /**
   * Sets the value of the 'program' field.
   * @param value the value to set.
   */
  public void setProgram(java.lang.CharSequence value) {
    this.program = value;
  }

  /**
   * Gets the value of the 'affiliation' field.
   * @return The value of the 'affiliation' field.
   */
  public java.lang.CharSequence getAffiliation() {
    return affiliation;
  }


  /**
   * Sets the value of the 'affiliation' field.
   * @param value the value to set.
   */
  public void setAffiliation(java.lang.CharSequence value) {
    this.affiliation = value;
  }

  /**
   * Gets the value of the 'contact' field.
   * @return The value of the 'contact' field.
   */
  public java.lang.CharSequence getContact() {
    return contact;
  }


  /**
   * Sets the value of the 'contact' field.
   * @param value the value to set.
   */
  public void setContact(java.lang.CharSequence value) {
    this.contact = value;
  }

  /**
   * Gets the value of the 'programPlan' field.
   * @return The value of the 'programPlan' field.
   */
  public java.lang.CharSequence getProgramPlan() {
    return programPlan;
  }


  /**
   * Sets the value of the 'programPlan' field.
   * @param value the value to set.
   */
  public void setProgramPlan(java.lang.CharSequence value) {
    this.programPlan = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.lang.Object getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.Object value) {
    this.createdAt = value;
  }

  /**
   * Gets the value of the 'userCreated' field.
   * @return The value of the 'userCreated' field.
   */
  public java.lang.CharSequence getUserCreated() {
    return userCreated;
  }


  /**
   * Sets the value of the 'userCreated' field.
   * @param value the value to set.
   */
  public void setUserCreated(java.lang.CharSequence value) {
    this.userCreated = value;
  }

  /**
   * Creates a new program_enrollment_created RecordBuilder.
   * @return A new program_enrollment_created RecordBuilder
   */
  public static br.com.kroton.program_enrollment_created.Builder newBuilder() {
    return new br.com.kroton.program_enrollment_created.Builder();
  }

  /**
   * Creates a new program_enrollment_created RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new program_enrollment_created RecordBuilder
   */
  public static br.com.kroton.program_enrollment_created.Builder newBuilder(br.com.kroton.program_enrollment_created.Builder other) {
    if (other == null) {
      return new br.com.kroton.program_enrollment_created.Builder();
    } else {
      return new br.com.kroton.program_enrollment_created.Builder(other);
    }
  }

  /**
   * Creates a new program_enrollment_created RecordBuilder by copying an existing program_enrollment_created instance.
   * @param other The existing instance to copy.
   * @return A new program_enrollment_created RecordBuilder
   */
  public static br.com.kroton.program_enrollment_created.Builder newBuilder(br.com.kroton.program_enrollment_created other) {
    if (other == null) {
      return new br.com.kroton.program_enrollment_created.Builder();
    } else {
      return new br.com.kroton.program_enrollment_created.Builder(other);
    }
  }

  /**
   * RecordBuilder for program_enrollment_created instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<program_enrollment_created>
    implements org.apache.avro.data.RecordBuilder<program_enrollment_created> {

    private java.lang.CharSequence id;
    private java.time.Instant admissionDate;
    private java.time.Instant applicationSubmittedDate;
    private java.lang.CharSequence classStanding;
    private java.lang.Float creditsAttempted;
    private java.lang.Float creditsEarned;
    private java.lang.Boolean eligibleToEnroll;
    private java.time.Instant startDate;
    private java.time.Instant endDate;
    private java.lang.CharSequence status;
    private java.lang.Float gradePointAverage;
    private java.lang.CharSequence program;
    private java.lang.CharSequence affiliation;
    private java.lang.CharSequence contact;
    private java.lang.CharSequence programPlan;
    private java.lang.Object createdAt;
    private java.lang.CharSequence userCreated;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.kroton.program_enrollment_created.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.admissionDate)) {
        this.admissionDate = data().deepCopy(fields()[1].schema(), other.admissionDate);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.applicationSubmittedDate)) {
        this.applicationSubmittedDate = data().deepCopy(fields()[2].schema(), other.applicationSubmittedDate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.classStanding)) {
        this.classStanding = data().deepCopy(fields()[3].schema(), other.classStanding);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.creditsAttempted)) {
        this.creditsAttempted = data().deepCopy(fields()[4].schema(), other.creditsAttempted);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.creditsEarned)) {
        this.creditsEarned = data().deepCopy(fields()[5].schema(), other.creditsEarned);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.eligibleToEnroll)) {
        this.eligibleToEnroll = data().deepCopy(fields()[6].schema(), other.eligibleToEnroll);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.startDate)) {
        this.startDate = data().deepCopy(fields()[7].schema(), other.startDate);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.endDate)) {
        this.endDate = data().deepCopy(fields()[8].schema(), other.endDate);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.gradePointAverage)) {
        this.gradePointAverage = data().deepCopy(fields()[10].schema(), other.gradePointAverage);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.program)) {
        this.program = data().deepCopy(fields()[11].schema(), other.program);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.affiliation)) {
        this.affiliation = data().deepCopy(fields()[12].schema(), other.affiliation);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.contact)) {
        this.contact = data().deepCopy(fields()[13].schema(), other.contact);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.programPlan)) {
        this.programPlan = data().deepCopy(fields()[14].schema(), other.programPlan);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[15].schema(), other.createdAt);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.userCreated)) {
        this.userCreated = data().deepCopy(fields()[16].schema(), other.userCreated);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
    }

    /**
     * Creates a Builder by copying an existing program_enrollment_created instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.kroton.program_enrollment_created other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.admissionDate)) {
        this.admissionDate = data().deepCopy(fields()[1].schema(), other.admissionDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.applicationSubmittedDate)) {
        this.applicationSubmittedDate = data().deepCopy(fields()[2].schema(), other.applicationSubmittedDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.classStanding)) {
        this.classStanding = data().deepCopy(fields()[3].schema(), other.classStanding);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.creditsAttempted)) {
        this.creditsAttempted = data().deepCopy(fields()[4].schema(), other.creditsAttempted);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.creditsEarned)) {
        this.creditsEarned = data().deepCopy(fields()[5].schema(), other.creditsEarned);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.eligibleToEnroll)) {
        this.eligibleToEnroll = data().deepCopy(fields()[6].schema(), other.eligibleToEnroll);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.startDate)) {
        this.startDate = data().deepCopy(fields()[7].schema(), other.startDate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.endDate)) {
        this.endDate = data().deepCopy(fields()[8].schema(), other.endDate);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.status)) {
        this.status = data().deepCopy(fields()[9].schema(), other.status);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.gradePointAverage)) {
        this.gradePointAverage = data().deepCopy(fields()[10].schema(), other.gradePointAverage);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.program)) {
        this.program = data().deepCopy(fields()[11].schema(), other.program);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.affiliation)) {
        this.affiliation = data().deepCopy(fields()[12].schema(), other.affiliation);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.contact)) {
        this.contact = data().deepCopy(fields()[13].schema(), other.contact);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.programPlan)) {
        this.programPlan = data().deepCopy(fields()[14].schema(), other.programPlan);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[15].schema(), other.createdAt);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.userCreated)) {
        this.userCreated = data().deepCopy(fields()[16].schema(), other.userCreated);
        fieldSetFlags()[16] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'admissionDate' field.
      * @return The value.
      */
    public java.time.Instant getAdmissionDate() {
      return admissionDate;
    }


    /**
      * Sets the value of the 'admissionDate' field.
      * @param value The value of 'admissionDate'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setAdmissionDate(java.time.Instant value) {
      validate(fields()[1], value);
      this.admissionDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'admissionDate' field has been set.
      * @return True if the 'admissionDate' field has been set, false otherwise.
      */
    public boolean hasAdmissionDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'admissionDate' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearAdmissionDate() {
      admissionDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'applicationSubmittedDate' field.
      * @return The value.
      */
    public java.time.Instant getApplicationSubmittedDate() {
      return applicationSubmittedDate;
    }


    /**
      * Sets the value of the 'applicationSubmittedDate' field.
      * @param value The value of 'applicationSubmittedDate'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setApplicationSubmittedDate(java.time.Instant value) {
      validate(fields()[2], value);
      this.applicationSubmittedDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'applicationSubmittedDate' field has been set.
      * @return True if the 'applicationSubmittedDate' field has been set, false otherwise.
      */
    public boolean hasApplicationSubmittedDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'applicationSubmittedDate' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearApplicationSubmittedDate() {
      applicationSubmittedDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'classStanding' field.
      * @return The value.
      */
    public java.lang.CharSequence getClassStanding() {
      return classStanding;
    }


    /**
      * Sets the value of the 'classStanding' field.
      * @param value The value of 'classStanding'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setClassStanding(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.classStanding = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'classStanding' field has been set.
      * @return True if the 'classStanding' field has been set, false otherwise.
      */
    public boolean hasClassStanding() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'classStanding' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearClassStanding() {
      classStanding = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'creditsAttempted' field.
      * @return The value.
      */
    public java.lang.Float getCreditsAttempted() {
      return creditsAttempted;
    }


    /**
      * Sets the value of the 'creditsAttempted' field.
      * @param value The value of 'creditsAttempted'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setCreditsAttempted(java.lang.Float value) {
      validate(fields()[4], value);
      this.creditsAttempted = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'creditsAttempted' field has been set.
      * @return True if the 'creditsAttempted' field has been set, false otherwise.
      */
    public boolean hasCreditsAttempted() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'creditsAttempted' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearCreditsAttempted() {
      creditsAttempted = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'creditsEarned' field.
      * @return The value.
      */
    public java.lang.Float getCreditsEarned() {
      return creditsEarned;
    }


    /**
      * Sets the value of the 'creditsEarned' field.
      * @param value The value of 'creditsEarned'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setCreditsEarned(java.lang.Float value) {
      validate(fields()[5], value);
      this.creditsEarned = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'creditsEarned' field has been set.
      * @return True if the 'creditsEarned' field has been set, false otherwise.
      */
    public boolean hasCreditsEarned() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'creditsEarned' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearCreditsEarned() {
      creditsEarned = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'eligibleToEnroll' field.
      * @return The value.
      */
    public java.lang.Boolean getEligibleToEnroll() {
      return eligibleToEnroll;
    }


    /**
      * Sets the value of the 'eligibleToEnroll' field.
      * @param value The value of 'eligibleToEnroll'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setEligibleToEnroll(java.lang.Boolean value) {
      validate(fields()[6], value);
      this.eligibleToEnroll = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'eligibleToEnroll' field has been set.
      * @return True if the 'eligibleToEnroll' field has been set, false otherwise.
      */
    public boolean hasEligibleToEnroll() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'eligibleToEnroll' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearEligibleToEnroll() {
      eligibleToEnroll = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'startDate' field.
      * @return The value.
      */
    public java.time.Instant getStartDate() {
      return startDate;
    }


    /**
      * Sets the value of the 'startDate' field.
      * @param value The value of 'startDate'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setStartDate(java.time.Instant value) {
      validate(fields()[7], value);
      this.startDate = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'startDate' field has been set.
      * @return True if the 'startDate' field has been set, false otherwise.
      */
    public boolean hasStartDate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'startDate' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearStartDate() {
      startDate = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'endDate' field.
      * @return The value.
      */
    public java.time.Instant getEndDate() {
      return endDate;
    }


    /**
      * Sets the value of the 'endDate' field.
      * @param value The value of 'endDate'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setEndDate(java.time.Instant value) {
      validate(fields()[8], value);
      this.endDate = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'endDate' field has been set.
      * @return True if the 'endDate' field has been set, false otherwise.
      */
    public boolean hasEndDate() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'endDate' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearEndDate() {
      endDate = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.CharSequence getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setStatus(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.status = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearStatus() {
      status = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'gradePointAverage' field.
      * @return The value.
      */
    public java.lang.Float getGradePointAverage() {
      return gradePointAverage;
    }


    /**
      * Sets the value of the 'gradePointAverage' field.
      * @param value The value of 'gradePointAverage'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setGradePointAverage(java.lang.Float value) {
      validate(fields()[10], value);
      this.gradePointAverage = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'gradePointAverage' field has been set.
      * @return True if the 'gradePointAverage' field has been set, false otherwise.
      */
    public boolean hasGradePointAverage() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'gradePointAverage' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearGradePointAverage() {
      gradePointAverage = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'program' field.
      * @return The value.
      */
    public java.lang.CharSequence getProgram() {
      return program;
    }


    /**
      * Sets the value of the 'program' field.
      * @param value The value of 'program'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setProgram(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.program = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'program' field has been set.
      * @return True if the 'program' field has been set, false otherwise.
      */
    public boolean hasProgram() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'program' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearProgram() {
      program = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'affiliation' field.
      * @return The value.
      */
    public java.lang.CharSequence getAffiliation() {
      return affiliation;
    }


    /**
      * Sets the value of the 'affiliation' field.
      * @param value The value of 'affiliation'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setAffiliation(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.affiliation = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'affiliation' field has been set.
      * @return True if the 'affiliation' field has been set, false otherwise.
      */
    public boolean hasAffiliation() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'affiliation' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearAffiliation() {
      affiliation = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'contact' field.
      * @return The value.
      */
    public java.lang.CharSequence getContact() {
      return contact;
    }


    /**
      * Sets the value of the 'contact' field.
      * @param value The value of 'contact'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setContact(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.contact = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'contact' field has been set.
      * @return True if the 'contact' field has been set, false otherwise.
      */
    public boolean hasContact() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'contact' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearContact() {
      contact = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'programPlan' field.
      * @return The value.
      */
    public java.lang.CharSequence getProgramPlan() {
      return programPlan;
    }


    /**
      * Sets the value of the 'programPlan' field.
      * @param value The value of 'programPlan'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setProgramPlan(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.programPlan = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'programPlan' field has been set.
      * @return True if the 'programPlan' field has been set, false otherwise.
      */
    public boolean hasProgramPlan() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'programPlan' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearProgramPlan() {
      programPlan = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.lang.Object getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setCreatedAt(java.lang.Object value) {
      validate(fields()[15], value);
      this.createdAt = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'userCreated' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserCreated() {
      return userCreated;
    }


    /**
      * Sets the value of the 'userCreated' field.
      * @param value The value of 'userCreated'.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder setUserCreated(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.userCreated = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'userCreated' field has been set.
      * @return True if the 'userCreated' field has been set, false otherwise.
      */
    public boolean hasUserCreated() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'userCreated' field.
      * @return This builder.
      */
    public br.com.kroton.program_enrollment_created.Builder clearUserCreated() {
      userCreated = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public program_enrollment_created build() {
      try {
        program_enrollment_created record = new program_enrollment_created();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.admissionDate = fieldSetFlags()[1] ? this.admissionDate : (java.time.Instant) defaultValue(fields()[1]);
        record.applicationSubmittedDate = fieldSetFlags()[2] ? this.applicationSubmittedDate : (java.time.Instant) defaultValue(fields()[2]);
        record.classStanding = fieldSetFlags()[3] ? this.classStanding : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.creditsAttempted = fieldSetFlags()[4] ? this.creditsAttempted : (java.lang.Float) defaultValue(fields()[4]);
        record.creditsEarned = fieldSetFlags()[5] ? this.creditsEarned : (java.lang.Float) defaultValue(fields()[5]);
        record.eligibleToEnroll = fieldSetFlags()[6] ? this.eligibleToEnroll : (java.lang.Boolean) defaultValue(fields()[6]);
        record.startDate = fieldSetFlags()[7] ? this.startDate : (java.time.Instant) defaultValue(fields()[7]);
        record.endDate = fieldSetFlags()[8] ? this.endDate : (java.time.Instant) defaultValue(fields()[8]);
        record.status = fieldSetFlags()[9] ? this.status : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.gradePointAverage = fieldSetFlags()[10] ? this.gradePointAverage : (java.lang.Float) defaultValue(fields()[10]);
        record.program = fieldSetFlags()[11] ? this.program : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.affiliation = fieldSetFlags()[12] ? this.affiliation : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.contact = fieldSetFlags()[13] ? this.contact : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.programPlan = fieldSetFlags()[14] ? this.programPlan : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.createdAt = fieldSetFlags()[15] ? this.createdAt :  defaultValue(fields()[15]);
        record.userCreated = fieldSetFlags()[16] ? this.userCreated : (java.lang.CharSequence) defaultValue(fields()[16]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<program_enrollment_created>
    WRITER$ = (org.apache.avro.io.DatumWriter<program_enrollment_created>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<program_enrollment_created>
    READER$ = (org.apache.avro.io.DatumReader<program_enrollment_created>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










