/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.kroton;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class contact_created extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1796820590515354587L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"contact_created\",\"namespace\":\"br.com.kroton\",\"fields\":[{\"name\":\"id\",\"type\":\"string\"},{\"name\":\"recordType\",\"type\":\"string\"},{\"name\":\"fullName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"firstName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"lastName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"birthDate\",\"type\":[\"null\",{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}],\"default\":null},{\"name\":\"documentNumber\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"doNotCall\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"mobilePhone\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"homePhone\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"phone\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"maritalStatus\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"hasOptedOutOfEmail\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"alternateEmail\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"chosenFullName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"citizenship\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"countryOfOrigin\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"deceased\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"doNotContact\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"dualCitizenship\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"ethnicity\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"financialAidApplicant\",\"type\":[\"null\",\"boolean\"],\"default\":null},{\"name\":\"gender\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"preferredPhone\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"preferredEmail\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"race\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"religion\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"workEmail\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"workPhone\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"createdAt\",\"type\":[{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}]},{\"name\":\"userCreated\",\"type\":\"string\"}],\"connect.name\":\"br.com.kroton.contact_created\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<contact_created> ENCODER =
      new BinaryMessageEncoder<contact_created>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<contact_created> DECODER =
      new BinaryMessageDecoder<contact_created>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<contact_created> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<contact_created> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<contact_created> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<contact_created>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this contact_created to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a contact_created from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a contact_created instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static contact_created fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence id;
   private java.lang.CharSequence recordType;
   private java.lang.CharSequence fullName;
   private java.lang.CharSequence firstName;
   private java.lang.CharSequence lastName;
   private java.time.Instant birthDate;
   private java.lang.CharSequence documentNumber;
   private java.lang.Boolean doNotCall;
   private java.lang.CharSequence mobilePhone;
   private java.lang.CharSequence homePhone;
   private java.lang.CharSequence phone;
   private java.lang.CharSequence maritalStatus;
   private java.lang.Boolean hasOptedOutOfEmail;
   private java.lang.CharSequence alternateEmail;
   private java.lang.CharSequence chosenFullName;
   private java.lang.CharSequence citizenship;
   private java.lang.CharSequence countryOfOrigin;
   private java.lang.Boolean deceased;
   private java.lang.Boolean doNotContact;
   private java.lang.CharSequence dualCitizenship;
   private java.lang.CharSequence ethnicity;
   private java.lang.Boolean financialAidApplicant;
   private java.lang.CharSequence gender;
   private java.lang.CharSequence preferredPhone;
   private java.lang.CharSequence preferredEmail;
   private java.lang.CharSequence race;
   private java.lang.CharSequence religion;
   private java.lang.CharSequence workEmail;
   private java.lang.CharSequence workPhone;
   private java.lang.Object createdAt;
   private java.lang.CharSequence userCreated;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public contact_created() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param recordType The new value for recordType
   * @param fullName The new value for fullName
   * @param firstName The new value for firstName
   * @param lastName The new value for lastName
   * @param birthDate The new value for birthDate
   * @param documentNumber The new value for documentNumber
   * @param doNotCall The new value for doNotCall
   * @param mobilePhone The new value for mobilePhone
   * @param homePhone The new value for homePhone
   * @param phone The new value for phone
   * @param maritalStatus The new value for maritalStatus
   * @param hasOptedOutOfEmail The new value for hasOptedOutOfEmail
   * @param alternateEmail The new value for alternateEmail
   * @param chosenFullName The new value for chosenFullName
   * @param citizenship The new value for citizenship
   * @param countryOfOrigin The new value for countryOfOrigin
   * @param deceased The new value for deceased
   * @param doNotContact The new value for doNotContact
   * @param dualCitizenship The new value for dualCitizenship
   * @param ethnicity The new value for ethnicity
   * @param financialAidApplicant The new value for financialAidApplicant
   * @param gender The new value for gender
   * @param preferredPhone The new value for preferredPhone
   * @param preferredEmail The new value for preferredEmail
   * @param race The new value for race
   * @param religion The new value for religion
   * @param workEmail The new value for workEmail
   * @param workPhone The new value for workPhone
   * @param createdAt The new value for createdAt
   * @param userCreated The new value for userCreated
   */
  public contact_created(java.lang.CharSequence id, java.lang.CharSequence recordType, java.lang.CharSequence fullName, java.lang.CharSequence firstName, java.lang.CharSequence lastName, java.time.Instant birthDate, java.lang.CharSequence documentNumber, java.lang.Boolean doNotCall, java.lang.CharSequence mobilePhone, java.lang.CharSequence homePhone, java.lang.CharSequence phone, java.lang.CharSequence maritalStatus, java.lang.Boolean hasOptedOutOfEmail, java.lang.CharSequence alternateEmail, java.lang.CharSequence chosenFullName, java.lang.CharSequence citizenship, java.lang.CharSequence countryOfOrigin, java.lang.Boolean deceased, java.lang.Boolean doNotContact, java.lang.CharSequence dualCitizenship, java.lang.CharSequence ethnicity, java.lang.Boolean financialAidApplicant, java.lang.CharSequence gender, java.lang.CharSequence preferredPhone, java.lang.CharSequence preferredEmail, java.lang.CharSequence race, java.lang.CharSequence religion, java.lang.CharSequence workEmail, java.lang.CharSequence workPhone, java.lang.Object createdAt, java.lang.CharSequence userCreated) {
    this.id = id;
    this.recordType = recordType;
    this.fullName = fullName;
    this.firstName = firstName;
    this.lastName = lastName;
    this.birthDate = birthDate;
    this.documentNumber = documentNumber;
    this.doNotCall = doNotCall;
    this.mobilePhone = mobilePhone;
    this.homePhone = homePhone;
    this.phone = phone;
    this.maritalStatus = maritalStatus;
    this.hasOptedOutOfEmail = hasOptedOutOfEmail;
    this.alternateEmail = alternateEmail;
    this.chosenFullName = chosenFullName;
    this.citizenship = citizenship;
    this.countryOfOrigin = countryOfOrigin;
    this.deceased = deceased;
    this.doNotContact = doNotContact;
    this.dualCitizenship = dualCitizenship;
    this.ethnicity = ethnicity;
    this.financialAidApplicant = financialAidApplicant;
    this.gender = gender;
    this.preferredPhone = preferredPhone;
    this.preferredEmail = preferredEmail;
    this.race = race;
    this.religion = religion;
    this.workEmail = workEmail;
    this.workPhone = workPhone;
    this.createdAt = createdAt;
    this.userCreated = userCreated;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return recordType;
    case 2: return fullName;
    case 3: return firstName;
    case 4: return lastName;
    case 5: return birthDate;
    case 6: return documentNumber;
    case 7: return doNotCall;
    case 8: return mobilePhone;
    case 9: return homePhone;
    case 10: return phone;
    case 11: return maritalStatus;
    case 12: return hasOptedOutOfEmail;
    case 13: return alternateEmail;
    case 14: return chosenFullName;
    case 15: return citizenship;
    case 16: return countryOfOrigin;
    case 17: return deceased;
    case 18: return doNotContact;
    case 19: return dualCitizenship;
    case 20: return ethnicity;
    case 21: return financialAidApplicant;
    case 22: return gender;
    case 23: return preferredPhone;
    case 24: return preferredEmail;
    case 25: return race;
    case 26: return religion;
    case 27: return workEmail;
    case 28: return workPhone;
    case 29: return createdAt;
    case 30: return userCreated;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: recordType = (java.lang.CharSequence)value$; break;
    case 2: fullName = (java.lang.CharSequence)value$; break;
    case 3: firstName = (java.lang.CharSequence)value$; break;
    case 4: lastName = (java.lang.CharSequence)value$; break;
    case 5: birthDate = (java.time.Instant)value$; break;
    case 6: documentNumber = (java.lang.CharSequence)value$; break;
    case 7: doNotCall = (java.lang.Boolean)value$; break;
    case 8: mobilePhone = (java.lang.CharSequence)value$; break;
    case 9: homePhone = (java.lang.CharSequence)value$; break;
    case 10: phone = (java.lang.CharSequence)value$; break;
    case 11: maritalStatus = (java.lang.CharSequence)value$; break;
    case 12: hasOptedOutOfEmail = (java.lang.Boolean)value$; break;
    case 13: alternateEmail = (java.lang.CharSequence)value$; break;
    case 14: chosenFullName = (java.lang.CharSequence)value$; break;
    case 15: citizenship = (java.lang.CharSequence)value$; break;
    case 16: countryOfOrigin = (java.lang.CharSequence)value$; break;
    case 17: deceased = (java.lang.Boolean)value$; break;
    case 18: doNotContact = (java.lang.Boolean)value$; break;
    case 19: dualCitizenship = (java.lang.CharSequence)value$; break;
    case 20: ethnicity = (java.lang.CharSequence)value$; break;
    case 21: financialAidApplicant = (java.lang.Boolean)value$; break;
    case 22: gender = (java.lang.CharSequence)value$; break;
    case 23: preferredPhone = (java.lang.CharSequence)value$; break;
    case 24: preferredEmail = (java.lang.CharSequence)value$; break;
    case 25: race = (java.lang.CharSequence)value$; break;
    case 26: religion = (java.lang.CharSequence)value$; break;
    case 27: workEmail = (java.lang.CharSequence)value$; break;
    case 28: workPhone = (java.lang.CharSequence)value$; break;
    case 29: createdAt = value$; break;
    case 30: userCreated = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'recordType' field.
   * @return The value of the 'recordType' field.
   */
  public java.lang.CharSequence getRecordType() {
    return recordType;
  }


  /**
   * Sets the value of the 'recordType' field.
   * @param value the value to set.
   */
  public void setRecordType(java.lang.CharSequence value) {
    this.recordType = value;
  }

  /**
   * Gets the value of the 'fullName' field.
   * @return The value of the 'fullName' field.
   */
  public java.lang.CharSequence getFullName() {
    return fullName;
  }


  /**
   * Sets the value of the 'fullName' field.
   * @param value the value to set.
   */
  public void setFullName(java.lang.CharSequence value) {
    this.fullName = value;
  }

  /**
   * Gets the value of the 'firstName' field.
   * @return The value of the 'firstName' field.
   */
  public java.lang.CharSequence getFirstName() {
    return firstName;
  }


  /**
   * Sets the value of the 'firstName' field.
   * @param value the value to set.
   */
  public void setFirstName(java.lang.CharSequence value) {
    this.firstName = value;
  }

  /**
   * Gets the value of the 'lastName' field.
   * @return The value of the 'lastName' field.
   */
  public java.lang.CharSequence getLastName() {
    return lastName;
  }


  /**
   * Sets the value of the 'lastName' field.
   * @param value the value to set.
   */
  public void setLastName(java.lang.CharSequence value) {
    this.lastName = value;
  }

  /**
   * Gets the value of the 'birthDate' field.
   * @return The value of the 'birthDate' field.
   */
  public java.time.Instant getBirthDate() {
    return birthDate;
  }


  /**
   * Sets the value of the 'birthDate' field.
   * @param value the value to set.
   */
  public void setBirthDate(java.time.Instant value) {
    this.birthDate = value;
  }

  /**
   * Gets the value of the 'documentNumber' field.
   * @return The value of the 'documentNumber' field.
   */
  public java.lang.CharSequence getDocumentNumber() {
    return documentNumber;
  }


  /**
   * Sets the value of the 'documentNumber' field.
   * @param value the value to set.
   */
  public void setDocumentNumber(java.lang.CharSequence value) {
    this.documentNumber = value;
  }

  /**
   * Gets the value of the 'doNotCall' field.
   * @return The value of the 'doNotCall' field.
   */
  public java.lang.Boolean getDoNotCall() {
    return doNotCall;
  }


  /**
   * Sets the value of the 'doNotCall' field.
   * @param value the value to set.
   */
  public void setDoNotCall(java.lang.Boolean value) {
    this.doNotCall = value;
  }

  /**
   * Gets the value of the 'mobilePhone' field.
   * @return The value of the 'mobilePhone' field.
   */
  public java.lang.CharSequence getMobilePhone() {
    return mobilePhone;
  }


  /**
   * Sets the value of the 'mobilePhone' field.
   * @param value the value to set.
   */
  public void setMobilePhone(java.lang.CharSequence value) {
    this.mobilePhone = value;
  }

  /**
   * Gets the value of the 'homePhone' field.
   * @return The value of the 'homePhone' field.
   */
  public java.lang.CharSequence getHomePhone() {
    return homePhone;
  }


  /**
   * Sets the value of the 'homePhone' field.
   * @param value the value to set.
   */
  public void setHomePhone(java.lang.CharSequence value) {
    this.homePhone = value;
  }

  /**
   * Gets the value of the 'phone' field.
   * @return The value of the 'phone' field.
   */
  public java.lang.CharSequence getPhone() {
    return phone;
  }


  /**
   * Sets the value of the 'phone' field.
   * @param value the value to set.
   */
  public void setPhone(java.lang.CharSequence value) {
    this.phone = value;
  }

  /**
   * Gets the value of the 'maritalStatus' field.
   * @return The value of the 'maritalStatus' field.
   */
  public java.lang.CharSequence getMaritalStatus() {
    return maritalStatus;
  }


  /**
   * Sets the value of the 'maritalStatus' field.
   * @param value the value to set.
   */
  public void setMaritalStatus(java.lang.CharSequence value) {
    this.maritalStatus = value;
  }

  /**
   * Gets the value of the 'hasOptedOutOfEmail' field.
   * @return The value of the 'hasOptedOutOfEmail' field.
   */
  public java.lang.Boolean getHasOptedOutOfEmail() {
    return hasOptedOutOfEmail;
  }


  /**
   * Sets the value of the 'hasOptedOutOfEmail' field.
   * @param value the value to set.
   */
  public void setHasOptedOutOfEmail(java.lang.Boolean value) {
    this.hasOptedOutOfEmail = value;
  }

  /**
   * Gets the value of the 'alternateEmail' field.
   * @return The value of the 'alternateEmail' field.
   */
  public java.lang.CharSequence getAlternateEmail() {
    return alternateEmail;
  }


  /**
   * Sets the value of the 'alternateEmail' field.
   * @param value the value to set.
   */
  public void setAlternateEmail(java.lang.CharSequence value) {
    this.alternateEmail = value;
  }

  /**
   * Gets the value of the 'chosenFullName' field.
   * @return The value of the 'chosenFullName' field.
   */
  public java.lang.CharSequence getChosenFullName() {
    return chosenFullName;
  }


  /**
   * Sets the value of the 'chosenFullName' field.
   * @param value the value to set.
   */
  public void setChosenFullName(java.lang.CharSequence value) {
    this.chosenFullName = value;
  }

  /**
   * Gets the value of the 'citizenship' field.
   * @return The value of the 'citizenship' field.
   */
  public java.lang.CharSequence getCitizenship() {
    return citizenship;
  }


  /**
   * Sets the value of the 'citizenship' field.
   * @param value the value to set.
   */
  public void setCitizenship(java.lang.CharSequence value) {
    this.citizenship = value;
  }

  /**
   * Gets the value of the 'countryOfOrigin' field.
   * @return The value of the 'countryOfOrigin' field.
   */
  public java.lang.CharSequence getCountryOfOrigin() {
    return countryOfOrigin;
  }


  /**
   * Sets the value of the 'countryOfOrigin' field.
   * @param value the value to set.
   */
  public void setCountryOfOrigin(java.lang.CharSequence value) {
    this.countryOfOrigin = value;
  }

  /**
   * Gets the value of the 'deceased' field.
   * @return The value of the 'deceased' field.
   */
  public java.lang.Boolean getDeceased() {
    return deceased;
  }


  /**
   * Sets the value of the 'deceased' field.
   * @param value the value to set.
   */
  public void setDeceased(java.lang.Boolean value) {
    this.deceased = value;
  }

  /**
   * Gets the value of the 'doNotContact' field.
   * @return The value of the 'doNotContact' field.
   */
  public java.lang.Boolean getDoNotContact() {
    return doNotContact;
  }


  /**
   * Sets the value of the 'doNotContact' field.
   * @param value the value to set.
   */
  public void setDoNotContact(java.lang.Boolean value) {
    this.doNotContact = value;
  }

  /**
   * Gets the value of the 'dualCitizenship' field.
   * @return The value of the 'dualCitizenship' field.
   */
  public java.lang.CharSequence getDualCitizenship() {
    return dualCitizenship;
  }


  /**
   * Sets the value of the 'dualCitizenship' field.
   * @param value the value to set.
   */
  public void setDualCitizenship(java.lang.CharSequence value) {
    this.dualCitizenship = value;
  }

  /**
   * Gets the value of the 'ethnicity' field.
   * @return The value of the 'ethnicity' field.
   */
  public java.lang.CharSequence getEthnicity() {
    return ethnicity;
  }


  /**
   * Sets the value of the 'ethnicity' field.
   * @param value the value to set.
   */
  public void setEthnicity(java.lang.CharSequence value) {
    this.ethnicity = value;
  }

  /**
   * Gets the value of the 'financialAidApplicant' field.
   * @return The value of the 'financialAidApplicant' field.
   */
  public java.lang.Boolean getFinancialAidApplicant() {
    return financialAidApplicant;
  }


  /**
   * Sets the value of the 'financialAidApplicant' field.
   * @param value the value to set.
   */
  public void setFinancialAidApplicant(java.lang.Boolean value) {
    this.financialAidApplicant = value;
  }

  /**
   * Gets the value of the 'gender' field.
   * @return The value of the 'gender' field.
   */
  public java.lang.CharSequence getGender() {
    return gender;
  }


  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(java.lang.CharSequence value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'preferredPhone' field.
   * @return The value of the 'preferredPhone' field.
   */
  public java.lang.CharSequence getPreferredPhone() {
    return preferredPhone;
  }


  /**
   * Sets the value of the 'preferredPhone' field.
   * @param value the value to set.
   */
  public void setPreferredPhone(java.lang.CharSequence value) {
    this.preferredPhone = value;
  }

  /**
   * Gets the value of the 'preferredEmail' field.
   * @return The value of the 'preferredEmail' field.
   */
  public java.lang.CharSequence getPreferredEmail() {
    return preferredEmail;
  }


  /**
   * Sets the value of the 'preferredEmail' field.
   * @param value the value to set.
   */
  public void setPreferredEmail(java.lang.CharSequence value) {
    this.preferredEmail = value;
  }

  /**
   * Gets the value of the 'race' field.
   * @return The value of the 'race' field.
   */
  public java.lang.CharSequence getRace() {
    return race;
  }


  /**
   * Sets the value of the 'race' field.
   * @param value the value to set.
   */
  public void setRace(java.lang.CharSequence value) {
    this.race = value;
  }

  /**
   * Gets the value of the 'religion' field.
   * @return The value of the 'religion' field.
   */
  public java.lang.CharSequence getReligion() {
    return religion;
  }


  /**
   * Sets the value of the 'religion' field.
   * @param value the value to set.
   */
  public void setReligion(java.lang.CharSequence value) {
    this.religion = value;
  }

  /**
   * Gets the value of the 'workEmail' field.
   * @return The value of the 'workEmail' field.
   */
  public java.lang.CharSequence getWorkEmail() {
    return workEmail;
  }


  /**
   * Sets the value of the 'workEmail' field.
   * @param value the value to set.
   */
  public void setWorkEmail(java.lang.CharSequence value) {
    this.workEmail = value;
  }

  /**
   * Gets the value of the 'workPhone' field.
   * @return The value of the 'workPhone' field.
   */
  public java.lang.CharSequence getWorkPhone() {
    return workPhone;
  }


  /**
   * Sets the value of the 'workPhone' field.
   * @param value the value to set.
   */
  public void setWorkPhone(java.lang.CharSequence value) {
    this.workPhone = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.lang.Object getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.Object value) {
    this.createdAt = value;
  }

  /**
   * Gets the value of the 'userCreated' field.
   * @return The value of the 'userCreated' field.
   */
  public java.lang.CharSequence getUserCreated() {
    return userCreated;
  }


  /**
   * Sets the value of the 'userCreated' field.
   * @param value the value to set.
   */
  public void setUserCreated(java.lang.CharSequence value) {
    this.userCreated = value;
  }

  /**
   * Creates a new contact_created RecordBuilder.
   * @return A new contact_created RecordBuilder
   */
  public static br.com.kroton.contact_created.Builder newBuilder() {
    return new br.com.kroton.contact_created.Builder();
  }

  /**
   * Creates a new contact_created RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new contact_created RecordBuilder
   */
  public static br.com.kroton.contact_created.Builder newBuilder(br.com.kroton.contact_created.Builder other) {
    if (other == null) {
      return new br.com.kroton.contact_created.Builder();
    } else {
      return new br.com.kroton.contact_created.Builder(other);
    }
  }

  /**
   * Creates a new contact_created RecordBuilder by copying an existing contact_created instance.
   * @param other The existing instance to copy.
   * @return A new contact_created RecordBuilder
   */
  public static br.com.kroton.contact_created.Builder newBuilder(br.com.kroton.contact_created other) {
    if (other == null) {
      return new br.com.kroton.contact_created.Builder();
    } else {
      return new br.com.kroton.contact_created.Builder(other);
    }
  }

  /**
   * RecordBuilder for contact_created instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<contact_created>
    implements org.apache.avro.data.RecordBuilder<contact_created> {

    private java.lang.CharSequence id;
    private java.lang.CharSequence recordType;
    private java.lang.CharSequence fullName;
    private java.lang.CharSequence firstName;
    private java.lang.CharSequence lastName;
    private java.time.Instant birthDate;
    private java.lang.CharSequence documentNumber;
    private java.lang.Boolean doNotCall;
    private java.lang.CharSequence mobilePhone;
    private java.lang.CharSequence homePhone;
    private java.lang.CharSequence phone;
    private java.lang.CharSequence maritalStatus;
    private java.lang.Boolean hasOptedOutOfEmail;
    private java.lang.CharSequence alternateEmail;
    private java.lang.CharSequence chosenFullName;
    private java.lang.CharSequence citizenship;
    private java.lang.CharSequence countryOfOrigin;
    private java.lang.Boolean deceased;
    private java.lang.Boolean doNotContact;
    private java.lang.CharSequence dualCitizenship;
    private java.lang.CharSequence ethnicity;
    private java.lang.Boolean financialAidApplicant;
    private java.lang.CharSequence gender;
    private java.lang.CharSequence preferredPhone;
    private java.lang.CharSequence preferredEmail;
    private java.lang.CharSequence race;
    private java.lang.CharSequence religion;
    private java.lang.CharSequence workEmail;
    private java.lang.CharSequence workPhone;
    private java.lang.Object createdAt;
    private java.lang.CharSequence userCreated;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.kroton.contact_created.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.recordType)) {
        this.recordType = data().deepCopy(fields()[1].schema(), other.recordType);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.fullName)) {
        this.fullName = data().deepCopy(fields()[2].schema(), other.fullName);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.firstName)) {
        this.firstName = data().deepCopy(fields()[3].schema(), other.firstName);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.lastName)) {
        this.lastName = data().deepCopy(fields()[4].schema(), other.lastName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.birthDate)) {
        this.birthDate = data().deepCopy(fields()[5].schema(), other.birthDate);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.documentNumber)) {
        this.documentNumber = data().deepCopy(fields()[6].schema(), other.documentNumber);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.doNotCall)) {
        this.doNotCall = data().deepCopy(fields()[7].schema(), other.doNotCall);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.mobilePhone)) {
        this.mobilePhone = data().deepCopy(fields()[8].schema(), other.mobilePhone);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.homePhone)) {
        this.homePhone = data().deepCopy(fields()[9].schema(), other.homePhone);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.phone)) {
        this.phone = data().deepCopy(fields()[10].schema(), other.phone);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.maritalStatus)) {
        this.maritalStatus = data().deepCopy(fields()[11].schema(), other.maritalStatus);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.hasOptedOutOfEmail)) {
        this.hasOptedOutOfEmail = data().deepCopy(fields()[12].schema(), other.hasOptedOutOfEmail);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.alternateEmail)) {
        this.alternateEmail = data().deepCopy(fields()[13].schema(), other.alternateEmail);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.chosenFullName)) {
        this.chosenFullName = data().deepCopy(fields()[14].schema(), other.chosenFullName);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.citizenship)) {
        this.citizenship = data().deepCopy(fields()[15].schema(), other.citizenship);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.countryOfOrigin)) {
        this.countryOfOrigin = data().deepCopy(fields()[16].schema(), other.countryOfOrigin);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.deceased)) {
        this.deceased = data().deepCopy(fields()[17].schema(), other.deceased);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.doNotContact)) {
        this.doNotContact = data().deepCopy(fields()[18].schema(), other.doNotContact);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.dualCitizenship)) {
        this.dualCitizenship = data().deepCopy(fields()[19].schema(), other.dualCitizenship);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.ethnicity)) {
        this.ethnicity = data().deepCopy(fields()[20].schema(), other.ethnicity);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.financialAidApplicant)) {
        this.financialAidApplicant = data().deepCopy(fields()[21].schema(), other.financialAidApplicant);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.gender)) {
        this.gender = data().deepCopy(fields()[22].schema(), other.gender);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.preferredPhone)) {
        this.preferredPhone = data().deepCopy(fields()[23].schema(), other.preferredPhone);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.preferredEmail)) {
        this.preferredEmail = data().deepCopy(fields()[24].schema(), other.preferredEmail);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.race)) {
        this.race = data().deepCopy(fields()[25].schema(), other.race);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.religion)) {
        this.religion = data().deepCopy(fields()[26].schema(), other.religion);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.workEmail)) {
        this.workEmail = data().deepCopy(fields()[27].schema(), other.workEmail);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.workPhone)) {
        this.workPhone = data().deepCopy(fields()[28].schema(), other.workPhone);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[29].schema(), other.createdAt);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.userCreated)) {
        this.userCreated = data().deepCopy(fields()[30].schema(), other.userCreated);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
    }

    /**
     * Creates a Builder by copying an existing contact_created instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.kroton.contact_created other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.recordType)) {
        this.recordType = data().deepCopy(fields()[1].schema(), other.recordType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.fullName)) {
        this.fullName = data().deepCopy(fields()[2].schema(), other.fullName);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.firstName)) {
        this.firstName = data().deepCopy(fields()[3].schema(), other.firstName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.lastName)) {
        this.lastName = data().deepCopy(fields()[4].schema(), other.lastName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.birthDate)) {
        this.birthDate = data().deepCopy(fields()[5].schema(), other.birthDate);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.documentNumber)) {
        this.documentNumber = data().deepCopy(fields()[6].schema(), other.documentNumber);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.doNotCall)) {
        this.doNotCall = data().deepCopy(fields()[7].schema(), other.doNotCall);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.mobilePhone)) {
        this.mobilePhone = data().deepCopy(fields()[8].schema(), other.mobilePhone);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.homePhone)) {
        this.homePhone = data().deepCopy(fields()[9].schema(), other.homePhone);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.phone)) {
        this.phone = data().deepCopy(fields()[10].schema(), other.phone);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.maritalStatus)) {
        this.maritalStatus = data().deepCopy(fields()[11].schema(), other.maritalStatus);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.hasOptedOutOfEmail)) {
        this.hasOptedOutOfEmail = data().deepCopy(fields()[12].schema(), other.hasOptedOutOfEmail);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.alternateEmail)) {
        this.alternateEmail = data().deepCopy(fields()[13].schema(), other.alternateEmail);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.chosenFullName)) {
        this.chosenFullName = data().deepCopy(fields()[14].schema(), other.chosenFullName);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.citizenship)) {
        this.citizenship = data().deepCopy(fields()[15].schema(), other.citizenship);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.countryOfOrigin)) {
        this.countryOfOrigin = data().deepCopy(fields()[16].schema(), other.countryOfOrigin);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.deceased)) {
        this.deceased = data().deepCopy(fields()[17].schema(), other.deceased);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.doNotContact)) {
        this.doNotContact = data().deepCopy(fields()[18].schema(), other.doNotContact);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.dualCitizenship)) {
        this.dualCitizenship = data().deepCopy(fields()[19].schema(), other.dualCitizenship);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.ethnicity)) {
        this.ethnicity = data().deepCopy(fields()[20].schema(), other.ethnicity);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.financialAidApplicant)) {
        this.financialAidApplicant = data().deepCopy(fields()[21].schema(), other.financialAidApplicant);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.gender)) {
        this.gender = data().deepCopy(fields()[22].schema(), other.gender);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.preferredPhone)) {
        this.preferredPhone = data().deepCopy(fields()[23].schema(), other.preferredPhone);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.preferredEmail)) {
        this.preferredEmail = data().deepCopy(fields()[24].schema(), other.preferredEmail);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.race)) {
        this.race = data().deepCopy(fields()[25].schema(), other.race);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.religion)) {
        this.religion = data().deepCopy(fields()[26].schema(), other.religion);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.workEmail)) {
        this.workEmail = data().deepCopy(fields()[27].schema(), other.workEmail);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.workPhone)) {
        this.workPhone = data().deepCopy(fields()[28].schema(), other.workPhone);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[29].schema(), other.createdAt);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.userCreated)) {
        this.userCreated = data().deepCopy(fields()[30].schema(), other.userCreated);
        fieldSetFlags()[30] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'recordType' field.
      * @return The value.
      */
    public java.lang.CharSequence getRecordType() {
      return recordType;
    }


    /**
      * Sets the value of the 'recordType' field.
      * @param value The value of 'recordType'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setRecordType(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.recordType = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'recordType' field has been set.
      * @return True if the 'recordType' field has been set, false otherwise.
      */
    public boolean hasRecordType() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'recordType' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearRecordType() {
      recordType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'fullName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFullName() {
      return fullName;
    }


    /**
      * Sets the value of the 'fullName' field.
      * @param value The value of 'fullName'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setFullName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.fullName = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'fullName' field has been set.
      * @return True if the 'fullName' field has been set, false otherwise.
      */
    public boolean hasFullName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'fullName' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearFullName() {
      fullName = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'firstName' field.
      * @return The value.
      */
    public java.lang.CharSequence getFirstName() {
      return firstName;
    }


    /**
      * Sets the value of the 'firstName' field.
      * @param value The value of 'firstName'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setFirstName(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.firstName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'firstName' field has been set.
      * @return True if the 'firstName' field has been set, false otherwise.
      */
    public boolean hasFirstName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'firstName' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearFirstName() {
      firstName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastName' field.
      * @return The value.
      */
    public java.lang.CharSequence getLastName() {
      return lastName;
    }


    /**
      * Sets the value of the 'lastName' field.
      * @param value The value of 'lastName'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setLastName(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.lastName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'lastName' field has been set.
      * @return True if the 'lastName' field has been set, false otherwise.
      */
    public boolean hasLastName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'lastName' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearLastName() {
      lastName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthDate' field.
      * @return The value.
      */
    public java.time.Instant getBirthDate() {
      return birthDate;
    }


    /**
      * Sets the value of the 'birthDate' field.
      * @param value The value of 'birthDate'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setBirthDate(java.time.Instant value) {
      validate(fields()[5], value);
      this.birthDate = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'birthDate' field has been set.
      * @return True if the 'birthDate' field has been set, false otherwise.
      */
    public boolean hasBirthDate() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'birthDate' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearBirthDate() {
      birthDate = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'documentNumber' field.
      * @return The value.
      */
    public java.lang.CharSequence getDocumentNumber() {
      return documentNumber;
    }


    /**
      * Sets the value of the 'documentNumber' field.
      * @param value The value of 'documentNumber'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setDocumentNumber(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.documentNumber = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'documentNumber' field has been set.
      * @return True if the 'documentNumber' field has been set, false otherwise.
      */
    public boolean hasDocumentNumber() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'documentNumber' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearDocumentNumber() {
      documentNumber = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'doNotCall' field.
      * @return The value.
      */
    public java.lang.Boolean getDoNotCall() {
      return doNotCall;
    }


    /**
      * Sets the value of the 'doNotCall' field.
      * @param value The value of 'doNotCall'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setDoNotCall(java.lang.Boolean value) {
      validate(fields()[7], value);
      this.doNotCall = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'doNotCall' field has been set.
      * @return True if the 'doNotCall' field has been set, false otherwise.
      */
    public boolean hasDoNotCall() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'doNotCall' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearDoNotCall() {
      doNotCall = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'mobilePhone' field.
      * @return The value.
      */
    public java.lang.CharSequence getMobilePhone() {
      return mobilePhone;
    }


    /**
      * Sets the value of the 'mobilePhone' field.
      * @param value The value of 'mobilePhone'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setMobilePhone(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.mobilePhone = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'mobilePhone' field has been set.
      * @return True if the 'mobilePhone' field has been set, false otherwise.
      */
    public boolean hasMobilePhone() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'mobilePhone' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearMobilePhone() {
      mobilePhone = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'homePhone' field.
      * @return The value.
      */
    public java.lang.CharSequence getHomePhone() {
      return homePhone;
    }


    /**
      * Sets the value of the 'homePhone' field.
      * @param value The value of 'homePhone'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setHomePhone(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.homePhone = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'homePhone' field has been set.
      * @return True if the 'homePhone' field has been set, false otherwise.
      */
    public boolean hasHomePhone() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'homePhone' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearHomePhone() {
      homePhone = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * @return The value.
      */
    public java.lang.CharSequence getPhone() {
      return phone;
    }


    /**
      * Sets the value of the 'phone' field.
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setPhone(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.phone = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'phone' field has been set.
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'phone' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearPhone() {
      phone = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'maritalStatus' field.
      * @return The value.
      */
    public java.lang.CharSequence getMaritalStatus() {
      return maritalStatus;
    }


    /**
      * Sets the value of the 'maritalStatus' field.
      * @param value The value of 'maritalStatus'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setMaritalStatus(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.maritalStatus = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'maritalStatus' field has been set.
      * @return True if the 'maritalStatus' field has been set, false otherwise.
      */
    public boolean hasMaritalStatus() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'maritalStatus' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearMaritalStatus() {
      maritalStatus = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'hasOptedOutOfEmail' field.
      * @return The value.
      */
    public java.lang.Boolean getHasOptedOutOfEmail() {
      return hasOptedOutOfEmail;
    }


    /**
      * Sets the value of the 'hasOptedOutOfEmail' field.
      * @param value The value of 'hasOptedOutOfEmail'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setHasOptedOutOfEmail(java.lang.Boolean value) {
      validate(fields()[12], value);
      this.hasOptedOutOfEmail = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'hasOptedOutOfEmail' field has been set.
      * @return True if the 'hasOptedOutOfEmail' field has been set, false otherwise.
      */
    public boolean hasHasOptedOutOfEmail() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'hasOptedOutOfEmail' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearHasOptedOutOfEmail() {
      hasOptedOutOfEmail = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'alternateEmail' field.
      * @return The value.
      */
    public java.lang.CharSequence getAlternateEmail() {
      return alternateEmail;
    }


    /**
      * Sets the value of the 'alternateEmail' field.
      * @param value The value of 'alternateEmail'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setAlternateEmail(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.alternateEmail = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'alternateEmail' field has been set.
      * @return True if the 'alternateEmail' field has been set, false otherwise.
      */
    public boolean hasAlternateEmail() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'alternateEmail' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearAlternateEmail() {
      alternateEmail = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'chosenFullName' field.
      * @return The value.
      */
    public java.lang.CharSequence getChosenFullName() {
      return chosenFullName;
    }


    /**
      * Sets the value of the 'chosenFullName' field.
      * @param value The value of 'chosenFullName'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setChosenFullName(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.chosenFullName = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'chosenFullName' field has been set.
      * @return True if the 'chosenFullName' field has been set, false otherwise.
      */
    public boolean hasChosenFullName() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'chosenFullName' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearChosenFullName() {
      chosenFullName = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'citizenship' field.
      * @return The value.
      */
    public java.lang.CharSequence getCitizenship() {
      return citizenship;
    }


    /**
      * Sets the value of the 'citizenship' field.
      * @param value The value of 'citizenship'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setCitizenship(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.citizenship = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'citizenship' field has been set.
      * @return True if the 'citizenship' field has been set, false otherwise.
      */
    public boolean hasCitizenship() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'citizenship' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearCitizenship() {
      citizenship = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryOfOrigin' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountryOfOrigin() {
      return countryOfOrigin;
    }


    /**
      * Sets the value of the 'countryOfOrigin' field.
      * @param value The value of 'countryOfOrigin'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setCountryOfOrigin(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.countryOfOrigin = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'countryOfOrigin' field has been set.
      * @return True if the 'countryOfOrigin' field has been set, false otherwise.
      */
    public boolean hasCountryOfOrigin() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'countryOfOrigin' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearCountryOfOrigin() {
      countryOfOrigin = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'deceased' field.
      * @return The value.
      */
    public java.lang.Boolean getDeceased() {
      return deceased;
    }


    /**
      * Sets the value of the 'deceased' field.
      * @param value The value of 'deceased'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setDeceased(java.lang.Boolean value) {
      validate(fields()[17], value);
      this.deceased = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'deceased' field has been set.
      * @return True if the 'deceased' field has been set, false otherwise.
      */
    public boolean hasDeceased() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'deceased' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearDeceased() {
      deceased = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'doNotContact' field.
      * @return The value.
      */
    public java.lang.Boolean getDoNotContact() {
      return doNotContact;
    }


    /**
      * Sets the value of the 'doNotContact' field.
      * @param value The value of 'doNotContact'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setDoNotContact(java.lang.Boolean value) {
      validate(fields()[18], value);
      this.doNotContact = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'doNotContact' field has been set.
      * @return True if the 'doNotContact' field has been set, false otherwise.
      */
    public boolean hasDoNotContact() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'doNotContact' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearDoNotContact() {
      doNotContact = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'dualCitizenship' field.
      * @return The value.
      */
    public java.lang.CharSequence getDualCitizenship() {
      return dualCitizenship;
    }


    /**
      * Sets the value of the 'dualCitizenship' field.
      * @param value The value of 'dualCitizenship'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setDualCitizenship(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.dualCitizenship = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'dualCitizenship' field has been set.
      * @return True if the 'dualCitizenship' field has been set, false otherwise.
      */
    public boolean hasDualCitizenship() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'dualCitizenship' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearDualCitizenship() {
      dualCitizenship = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'ethnicity' field.
      * @return The value.
      */
    public java.lang.CharSequence getEthnicity() {
      return ethnicity;
    }


    /**
      * Sets the value of the 'ethnicity' field.
      * @param value The value of 'ethnicity'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setEthnicity(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.ethnicity = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'ethnicity' field has been set.
      * @return True if the 'ethnicity' field has been set, false otherwise.
      */
    public boolean hasEthnicity() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'ethnicity' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearEthnicity() {
      ethnicity = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'financialAidApplicant' field.
      * @return The value.
      */
    public java.lang.Boolean getFinancialAidApplicant() {
      return financialAidApplicant;
    }


    /**
      * Sets the value of the 'financialAidApplicant' field.
      * @param value The value of 'financialAidApplicant'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setFinancialAidApplicant(java.lang.Boolean value) {
      validate(fields()[21], value);
      this.financialAidApplicant = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'financialAidApplicant' field has been set.
      * @return True if the 'financialAidApplicant' field has been set, false otherwise.
      */
    public boolean hasFinancialAidApplicant() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'financialAidApplicant' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearFinancialAidApplicant() {
      financialAidApplicant = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender' field.
      * @return The value.
      */
    public java.lang.CharSequence getGender() {
      return gender;
    }


    /**
      * Sets the value of the 'gender' field.
      * @param value The value of 'gender'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setGender(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.gender = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'gender' field has been set.
      * @return True if the 'gender' field has been set, false otherwise.
      */
    public boolean hasGender() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'gender' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearGender() {
      gender = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'preferredPhone' field.
      * @return The value.
      */
    public java.lang.CharSequence getPreferredPhone() {
      return preferredPhone;
    }


    /**
      * Sets the value of the 'preferredPhone' field.
      * @param value The value of 'preferredPhone'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setPreferredPhone(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.preferredPhone = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'preferredPhone' field has been set.
      * @return True if the 'preferredPhone' field has been set, false otherwise.
      */
    public boolean hasPreferredPhone() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'preferredPhone' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearPreferredPhone() {
      preferredPhone = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'preferredEmail' field.
      * @return The value.
      */
    public java.lang.CharSequence getPreferredEmail() {
      return preferredEmail;
    }


    /**
      * Sets the value of the 'preferredEmail' field.
      * @param value The value of 'preferredEmail'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setPreferredEmail(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.preferredEmail = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'preferredEmail' field has been set.
      * @return True if the 'preferredEmail' field has been set, false otherwise.
      */
    public boolean hasPreferredEmail() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'preferredEmail' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearPreferredEmail() {
      preferredEmail = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'race' field.
      * @return The value.
      */
    public java.lang.CharSequence getRace() {
      return race;
    }


    /**
      * Sets the value of the 'race' field.
      * @param value The value of 'race'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setRace(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.race = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'race' field has been set.
      * @return True if the 'race' field has been set, false otherwise.
      */
    public boolean hasRace() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'race' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearRace() {
      race = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'religion' field.
      * @return The value.
      */
    public java.lang.CharSequence getReligion() {
      return religion;
    }


    /**
      * Sets the value of the 'religion' field.
      * @param value The value of 'religion'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setReligion(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.religion = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'religion' field has been set.
      * @return True if the 'religion' field has been set, false otherwise.
      */
    public boolean hasReligion() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'religion' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearReligion() {
      religion = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'workEmail' field.
      * @return The value.
      */
    public java.lang.CharSequence getWorkEmail() {
      return workEmail;
    }


    /**
      * Sets the value of the 'workEmail' field.
      * @param value The value of 'workEmail'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setWorkEmail(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.workEmail = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'workEmail' field has been set.
      * @return True if the 'workEmail' field has been set, false otherwise.
      */
    public boolean hasWorkEmail() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'workEmail' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearWorkEmail() {
      workEmail = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'workPhone' field.
      * @return The value.
      */
    public java.lang.CharSequence getWorkPhone() {
      return workPhone;
    }


    /**
      * Sets the value of the 'workPhone' field.
      * @param value The value of 'workPhone'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setWorkPhone(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.workPhone = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'workPhone' field has been set.
      * @return True if the 'workPhone' field has been set, false otherwise.
      */
    public boolean hasWorkPhone() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'workPhone' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearWorkPhone() {
      workPhone = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.lang.Object getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setCreatedAt(java.lang.Object value) {
      validate(fields()[29], value);
      this.createdAt = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'userCreated' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserCreated() {
      return userCreated;
    }


    /**
      * Sets the value of the 'userCreated' field.
      * @param value The value of 'userCreated'.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder setUserCreated(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.userCreated = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'userCreated' field has been set.
      * @return True if the 'userCreated' field has been set, false otherwise.
      */
    public boolean hasUserCreated() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'userCreated' field.
      * @return This builder.
      */
    public br.com.kroton.contact_created.Builder clearUserCreated() {
      userCreated = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public contact_created build() {
      try {
        contact_created record = new contact_created();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.recordType = fieldSetFlags()[1] ? this.recordType : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.fullName = fieldSetFlags()[2] ? this.fullName : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.firstName = fieldSetFlags()[3] ? this.firstName : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.lastName = fieldSetFlags()[4] ? this.lastName : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.birthDate = fieldSetFlags()[5] ? this.birthDate : (java.time.Instant) defaultValue(fields()[5]);
        record.documentNumber = fieldSetFlags()[6] ? this.documentNumber : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.doNotCall = fieldSetFlags()[7] ? this.doNotCall : (java.lang.Boolean) defaultValue(fields()[7]);
        record.mobilePhone = fieldSetFlags()[8] ? this.mobilePhone : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.homePhone = fieldSetFlags()[9] ? this.homePhone : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.phone = fieldSetFlags()[10] ? this.phone : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.maritalStatus = fieldSetFlags()[11] ? this.maritalStatus : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.hasOptedOutOfEmail = fieldSetFlags()[12] ? this.hasOptedOutOfEmail : (java.lang.Boolean) defaultValue(fields()[12]);
        record.alternateEmail = fieldSetFlags()[13] ? this.alternateEmail : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.chosenFullName = fieldSetFlags()[14] ? this.chosenFullName : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.citizenship = fieldSetFlags()[15] ? this.citizenship : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.countryOfOrigin = fieldSetFlags()[16] ? this.countryOfOrigin : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.deceased = fieldSetFlags()[17] ? this.deceased : (java.lang.Boolean) defaultValue(fields()[17]);
        record.doNotContact = fieldSetFlags()[18] ? this.doNotContact : (java.lang.Boolean) defaultValue(fields()[18]);
        record.dualCitizenship = fieldSetFlags()[19] ? this.dualCitizenship : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.ethnicity = fieldSetFlags()[20] ? this.ethnicity : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.financialAidApplicant = fieldSetFlags()[21] ? this.financialAidApplicant : (java.lang.Boolean) defaultValue(fields()[21]);
        record.gender = fieldSetFlags()[22] ? this.gender : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.preferredPhone = fieldSetFlags()[23] ? this.preferredPhone : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.preferredEmail = fieldSetFlags()[24] ? this.preferredEmail : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.race = fieldSetFlags()[25] ? this.race : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.religion = fieldSetFlags()[26] ? this.religion : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.workEmail = fieldSetFlags()[27] ? this.workEmail : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.workPhone = fieldSetFlags()[28] ? this.workPhone : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.createdAt = fieldSetFlags()[29] ? this.createdAt :  defaultValue(fields()[29]);
        record.userCreated = fieldSetFlags()[30] ? this.userCreated : (java.lang.CharSequence) defaultValue(fields()[30]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<contact_created>
    WRITER$ = (org.apache.avro.io.DatumWriter<contact_created>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<contact_created>
    READER$ = (org.apache.avro.io.DatumReader<contact_created>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










