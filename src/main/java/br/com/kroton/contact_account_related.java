/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.kroton;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class contact_account_related extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4989790272552996017L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"contact_account_related\",\"namespace\":\"br.com.kroton\",\"fields\":[{\"name\":\"parentId\",\"type\":\"string\"},{\"name\":\"childId\",\"type\":\"string\"},{\"name\":\"createdAt\",\"type\":[{\"type\":\"long\",\"connect.version\":1,\"connect.name\":\"org.apache.kafka.connect.data.Timestamp\",\"logicalType\":\"timestamp-millis\"}]},{\"name\":\"userCreated\",\"type\":\"string\"}],\"connect.name\":\"br.com.kroton.contact_account_related\"}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<contact_account_related> ENCODER =
      new BinaryMessageEncoder<contact_account_related>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<contact_account_related> DECODER =
      new BinaryMessageDecoder<contact_account_related>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<contact_account_related> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<contact_account_related> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<contact_account_related> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<contact_account_related>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this contact_account_related to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a contact_account_related from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a contact_account_related instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static contact_account_related fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.CharSequence parentId;
   private java.lang.CharSequence childId;
   private java.lang.Object createdAt;
   private java.lang.CharSequence userCreated;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public contact_account_related() {}

  /**
   * All-args constructor.
   * @param parentId The new value for parentId
   * @param childId The new value for childId
   * @param createdAt The new value for createdAt
   * @param userCreated The new value for userCreated
   */
  public contact_account_related(java.lang.CharSequence parentId, java.lang.CharSequence childId, java.lang.Object createdAt, java.lang.CharSequence userCreated) {
    this.parentId = parentId;
    this.childId = childId;
    this.createdAt = createdAt;
    this.userCreated = userCreated;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return parentId;
    case 1: return childId;
    case 2: return createdAt;
    case 3: return userCreated;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: parentId = (java.lang.CharSequence)value$; break;
    case 1: childId = (java.lang.CharSequence)value$; break;
    case 2: createdAt = value$; break;
    case 3: userCreated = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'parentId' field.
   * @return The value of the 'parentId' field.
   */
  public java.lang.CharSequence getParentId() {
    return parentId;
  }


  /**
   * Sets the value of the 'parentId' field.
   * @param value the value to set.
   */
  public void setParentId(java.lang.CharSequence value) {
    this.parentId = value;
  }

  /**
   * Gets the value of the 'childId' field.
   * @return The value of the 'childId' field.
   */
  public java.lang.CharSequence getChildId() {
    return childId;
  }


  /**
   * Sets the value of the 'childId' field.
   * @param value the value to set.
   */
  public void setChildId(java.lang.CharSequence value) {
    this.childId = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.lang.Object getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.Object value) {
    this.createdAt = value;
  }

  /**
   * Gets the value of the 'userCreated' field.
   * @return The value of the 'userCreated' field.
   */
  public java.lang.CharSequence getUserCreated() {
    return userCreated;
  }


  /**
   * Sets the value of the 'userCreated' field.
   * @param value the value to set.
   */
  public void setUserCreated(java.lang.CharSequence value) {
    this.userCreated = value;
  }

  /**
   * Creates a new contact_account_related RecordBuilder.
   * @return A new contact_account_related RecordBuilder
   */
  public static br.com.kroton.contact_account_related.Builder newBuilder() {
    return new br.com.kroton.contact_account_related.Builder();
  }

  /**
   * Creates a new contact_account_related RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new contact_account_related RecordBuilder
   */
  public static br.com.kroton.contact_account_related.Builder newBuilder(br.com.kroton.contact_account_related.Builder other) {
    if (other == null) {
      return new br.com.kroton.contact_account_related.Builder();
    } else {
      return new br.com.kroton.contact_account_related.Builder(other);
    }
  }

  /**
   * Creates a new contact_account_related RecordBuilder by copying an existing contact_account_related instance.
   * @param other The existing instance to copy.
   * @return A new contact_account_related RecordBuilder
   */
  public static br.com.kroton.contact_account_related.Builder newBuilder(br.com.kroton.contact_account_related other) {
    if (other == null) {
      return new br.com.kroton.contact_account_related.Builder();
    } else {
      return new br.com.kroton.contact_account_related.Builder(other);
    }
  }

  /**
   * RecordBuilder for contact_account_related instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<contact_account_related>
    implements org.apache.avro.data.RecordBuilder<contact_account_related> {

    private java.lang.CharSequence parentId;
    private java.lang.CharSequence childId;
    private java.lang.Object createdAt;
    private java.lang.CharSequence userCreated;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.kroton.contact_account_related.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.parentId)) {
        this.parentId = data().deepCopy(fields()[0].schema(), other.parentId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.childId)) {
        this.childId = data().deepCopy(fields()[1].schema(), other.childId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[2].schema(), other.createdAt);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.userCreated)) {
        this.userCreated = data().deepCopy(fields()[3].schema(), other.userCreated);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing contact_account_related instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.kroton.contact_account_related other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.parentId)) {
        this.parentId = data().deepCopy(fields()[0].schema(), other.parentId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.childId)) {
        this.childId = data().deepCopy(fields()[1].schema(), other.childId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[2].schema(), other.createdAt);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.userCreated)) {
        this.userCreated = data().deepCopy(fields()[3].schema(), other.userCreated);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'parentId' field.
      * @return The value.
      */
    public java.lang.CharSequence getParentId() {
      return parentId;
    }


    /**
      * Sets the value of the 'parentId' field.
      * @param value The value of 'parentId'.
      * @return This builder.
      */
    public br.com.kroton.contact_account_related.Builder setParentId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.parentId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'parentId' field has been set.
      * @return True if the 'parentId' field has been set, false otherwise.
      */
    public boolean hasParentId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'parentId' field.
      * @return This builder.
      */
    public br.com.kroton.contact_account_related.Builder clearParentId() {
      parentId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'childId' field.
      * @return The value.
      */
    public java.lang.CharSequence getChildId() {
      return childId;
    }


    /**
      * Sets the value of the 'childId' field.
      * @param value The value of 'childId'.
      * @return This builder.
      */
    public br.com.kroton.contact_account_related.Builder setChildId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.childId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'childId' field has been set.
      * @return True if the 'childId' field has been set, false otherwise.
      */
    public boolean hasChildId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'childId' field.
      * @return This builder.
      */
    public br.com.kroton.contact_account_related.Builder clearChildId() {
      childId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.lang.Object getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public br.com.kroton.contact_account_related.Builder setCreatedAt(java.lang.Object value) {
      validate(fields()[2], value);
      this.createdAt = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public br.com.kroton.contact_account_related.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'userCreated' field.
      * @return The value.
      */
    public java.lang.CharSequence getUserCreated() {
      return userCreated;
    }


    /**
      * Sets the value of the 'userCreated' field.
      * @param value The value of 'userCreated'.
      * @return This builder.
      */
    public br.com.kroton.contact_account_related.Builder setUserCreated(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.userCreated = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'userCreated' field has been set.
      * @return True if the 'userCreated' field has been set, false otherwise.
      */
    public boolean hasUserCreated() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'userCreated' field.
      * @return This builder.
      */
    public br.com.kroton.contact_account_related.Builder clearUserCreated() {
      userCreated = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public contact_account_related build() {
      try {
        contact_account_related record = new contact_account_related();
        record.parentId = fieldSetFlags()[0] ? this.parentId : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.childId = fieldSetFlags()[1] ? this.childId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.createdAt = fieldSetFlags()[2] ? this.createdAt :  defaultValue(fields()[2]);
        record.userCreated = fieldSetFlags()[3] ? this.userCreated : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<contact_account_related>
    WRITER$ = (org.apache.avro.io.DatumWriter<contact_account_related>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<contact_account_related>
    READER$ = (org.apache.avro.io.DatumReader<contact_account_related>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










